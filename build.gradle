plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'war'
	id 'jacoco'

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit:junit:4.12', module: 'junit:junit:4.12'
    }
    //testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //testImplementation 'junit:junit:4.12'


    //implementation 'org.flywaydb:flyway-core' // 追加
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3' // 追加
    runtimeOnly 'mysql:mysql-connector-java' // 追加
}

		// コンパイル時に使用する文字コードをUTF-8で固定する
	tasks.withType(AbstractCompile).each { it.options.encoding = 'UTF-8' }
	tasks.withType(Test) {
	    systemProperty "file.encoding", "UTF-8"
	}

	// testタスクの後にjacocoTestReportタスクを実施する
	test.finalizedBy jacocoTestReport

 test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        events = ['started', 'skipped', 'passed', 'failed']
        exceptionFormat = 'full'
    }
    }

//tasks.named('test') {
	//useJUnitPlatform()
//}



